name: build

on:
  - push
  - pull_request

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    env:
      NAME: yuki
      GO111MODULE: on
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            # GitHub Actions only provides amd64 arch now.
            GOOS: linux 
            GOARCH: amd64

    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Golang module cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
          curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
          dep ensure
        fi

    - name: Start MongoDB
      run: sudo systemctl start mongod

    - name: Test
      run: |
        docker pull ustcmirror/test
        ci/script.sh

    - name: Deploy - Build
      if: startsWith(github.ref, 'refs/tags/')
      run: ci/build.sh
      env:
        GOOS: ${{ matrix.GOOS }}
        GOARCH: ${{ matrix.GOARCH }}

    - name: Deploy - Extract tag name
      id: tag
      uses: actions/github-script@v3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          return context.ref.replace(/^refs\/tags\//, '');

    - name: Deploy - Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.result }}
        release_name: ${{ steps.tag.outputs.result }}
        draft: false
        prerelease: false

    - name: Deploy - Upload Release
      if: startsWith(github.ref, 'refs/tags/')
      id: upload-release-asset 
      uses: csexton/release-asset-action@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        release-url: ${{ steps.create_release.outputs.upload_url }}
        pattern: ${{ env.NAME }}-*.tar.gz
